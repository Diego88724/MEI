A ver si me explico: no cambies la extensión del archivo de datos , ni me lo mandes.



(1) Para representar las distribuciones normal o t de student toma intervalos del tipo media +- 4 desviación

Si no no sale entero y no se precian bien ni los intervalos ni las colas.




(2) el "else" hay que ponerlo en la misma linea que cierres el bloque, es decir la misma línea que cierras llave.

Una vez resuelto esto, completa la parte correspondiente a los test de hipótesis,  esto para los distintos valores de los parametros (n y alpha)




(3) Pon títulos a los gráficos (opcion "main") indicando lso valores de lso parámetreos "m" y "alpha"



(4)  No repitas el mismo código mil veces, usa bucles anidados !!!

(publicaré un documento con este tema)






##Anterior opción

###############0.05###############


alpha <- 0.05

calcular_intervalo <- function(n,media,varianza,alpha) {
  z1 <- qnorm((1-alpha/2), media, sqrt(varianza), lower.tail = FALSE)
  delta1 <- z1*sqrt(varianza)/sqrt(n)
  a1 <- media + delta1
  b1 <- media - delta1
  return(c(b1,a1))
}
calcular_intervalo(n,media,varianza,alpha)

###############0.025###############

alpha <- 0.025

calcular_intervalo <- function(n,media,varianza,alpha) {
  z2 <- qnorm((1-alpha/2), media, sqrt(varianza), lower.tail = FALSE)
  delta2 <- z2*sqrt(varianza)/sqrt(n)
  a2 <- media + delta2
  b2 <- media - delta2
  return(c(b2,a2))
}
calcular_intervalo(n,media,varianza,alpha)

###############0.01###############

alpha <- 0.01

calcular_intervalo <- function(n,media,varianza,alpha) {
  z3 <- qnorm((1-alpha/2), media, sqrt(varianza), lower.tail = FALSE)
  delta3 <- z3*sqrt(varianza)/sqrt(n)
  a3 <- media + delta3
  b3 <- media - delta3
  return(c(b3,a3))
}
calcular_intervalo(n,media,varianza,alpha)